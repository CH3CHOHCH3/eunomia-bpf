
// Generated by c-struct-bindgen and ecc - DO NOT EDIT
// See https://github.com/eunomia-bpf/c-struct-bindgen for details.
#ifndef __STRUCT_MARSHAL_OPENSNOOP_H__
#define __STRUCT_MARSHAL_OPENSNOOP_H__

#include <string.h>
#include <stdint.h>
#include <assert.h>

static void
marshal_struct_event__to_binary(void *_dst, const struct event *src)
{
    // avoid -Wpointer-arith warning
    char *dst = (char *)_dst;
    assert(dst && src);
    *(unsigned long long *)(dst + 0) = src->ts;
    *(int *)(dst + 8) = src->pid;
    *(int *)(dst + 12) = src->uid;
    *(int *)(dst + 16) = src->ret;
    *(int *)(dst + 20) = src->flags;
    memcpy(dst + 24, src->comm, 16);
    memcpy(dst + 40, src->fname, 255);
}

static void
unmarshal_struct_event__from_binary(struct event *dst, const void *_src)
{
    // avoid -Wpointer-arith warning
    const char *src = (const char *)_src;
    assert(dst && src);
    dst->ts = *(unsigned long long *)(src + 0);
    dst->pid = *(int *)(src + 8);
    dst->uid = *(int *)(src + 12);
    dst->ret = *(int *)(src + 16);
    dst->flags = *(int *)(src + 20);
    memcpy(dst->comm, src + 24, 16);
    memcpy(dst->fname, src + 40, 255);
}

#endif
